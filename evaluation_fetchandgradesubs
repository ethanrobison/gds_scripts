#!/bin/zsh

validate () {
    for c in ${(f)REST}; do
        if ! rg -q '[a-z]{3}[0-9]{3,4},[0-9]{0,3}' <<< $c; then
            echo "Poorly formatted.\n"
            return 0
        fi
    done

    return 1
}

sub_grade () {
    local BASE=100

    if [ "$1" != "false" ]; then
        EPOCH=$(gdate -d $2 +%s)
        DIFF=$(((($EPOCH - $DUE_SEC) / 86400) + 1))

        BASE=$((100 - 25 * $DIFF))
    fi

    validate "$3"
    MUL=$?
    return $(($BASE * $MUL))
}

# calculate due date epoch
DUE_DATE=$(curl -s -X GET "$BASE/courses/$CID/assignments/$ASSIGN_ID" -H "$AUTH" \
    | jq -r '.due_at')

DUE_SEC=$(gdate -d "$DUE_DATE" +%s)

# download subs
SUBS=$(curl -s -X GET "$BASE/courses/$CID/assignments/$ASSIGN_ID/submissions" \
    -H "$AUTH" \
    -F "per_page=99")

TRIMMED=$(jq '[.[] | {
        uid: .user_id,
        timestamp: .submitted_at,
        late: .late,
        url: .attachments[]? .url }]' <<< $SUBS)

# upload grades i: original submission
LEN=$(($(jq '. | length' <<< $TRIMMED ) - 1))

for i in {0..$LEN}; do
    SUB=$(jq ".[$i]" <<< $TRIMMED)
    USER=$(jq '.uid' <<< $SUB)

    LATE=$(jq '.late' <<< $SUB)

    TIMESTAMP=$(jq -r '.timestamp' <<< $SUB)

    URL=$(jq -r '.url' <<< $SUB)
    FILE="$TEMP_DIR/$USER"
    wget -q -O "$FILE" "$URL"

    sub_grade "$LATE" "$TIMESTAMP" "$FILE"
    GRADE=$?
    if (( $GRADE < 0 )); then GRADE=0; fi
    echo "$USER submission grade: $GRADE"

#    OUTPUT=$(curl -s -X PUT \
#        "$BASE/courses/$CID/assignments/$ASSIGN_ID/submissions/$USER" \
#        -H "$AUTH" \
#        -F "submission[posted_grade]=$GRADE%")
done
